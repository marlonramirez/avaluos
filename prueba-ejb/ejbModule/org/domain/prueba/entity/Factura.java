package org.domain.prueba.entity;

// Generated 24/03/2015 11:16:57 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Factura generated by hbm2java
 */
@Entity
@Table(name = "factura", catalog = "db_acinversiones", uniqueConstraints = @UniqueConstraint(columnNames = "num_factura"))
public class Factura implements java.io.Serializable {

	private Integer idFactura;
	private FormaPago formaPago;
	private Ciudad ciudad;
	private String numFactura;
	private int idCliente;
	private Date fechaExp;
	private Date fechaVenc;
	private double subtotal;
	private double iva;
	private double total;
	private Set<ItemFactura> itemFacturas = new HashSet<ItemFactura>(0);

	public Factura() {
	}

	public Factura(FormaPago formaPago, Ciudad ciudad, String numFactura,
			int idCliente, double subtotal, double iva, double total) {
		this.formaPago = formaPago;
		this.ciudad = ciudad;
		this.numFactura = numFactura;
		this.idCliente = idCliente;
		this.subtotal = subtotal;
		this.iva = iva;
		this.total = total;
	}

	public Factura(FormaPago formaPago, Ciudad ciudad, String numFactura,
			int idCliente, Date fechaExp, Date fechaVenc, double subtotal,
			double iva, double total, Set<ItemFactura> itemFacturas) {
		this.formaPago = formaPago;
		this.ciudad = ciudad;
		this.numFactura = numFactura;
		this.idCliente = idCliente;
		this.fechaExp = fechaExp;
		this.fechaVenc = fechaVenc;
		this.subtotal = subtotal;
		this.iva = iva;
		this.total = total;
		this.itemFacturas = itemFacturas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_factura", unique = true, nullable = false)
	public Integer getIdFactura() {
		return this.idFactura;
	}

	public void setIdFactura(Integer idFactura) {
		this.idFactura = idFactura;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_forma_pago_fac", nullable = false)
	@NotNull
	public FormaPago getFormaPago() {
		return this.formaPago;
	}

	public void setFormaPago(FormaPago formaPago) {
		this.formaPago = formaPago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ciudad_id", nullable = false)
	@NotNull
	public Ciudad getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(Ciudad ciudad) {
		this.ciudad = ciudad;
	}

	@Column(name = "num_factura", unique = true, nullable = false, length = 15)
	@NotNull
	@Length(max = 15)
	public String getNumFactura() {
		return this.numFactura;
	}

	public void setNumFactura(String numFactura) {
		this.numFactura = numFactura;
	}

	@Column(name = "id_cliente", nullable = false)
	public int getIdCliente() {
		return this.idCliente;
	}

	public void setIdCliente(int idCliente) {
		this.idCliente = idCliente;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_exp", length = 0)
	public Date getFechaExp() {
		return this.fechaExp;
	}

	public void setFechaExp(Date fechaExp) {
		this.fechaExp = fechaExp;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_venc", length = 0)
	public Date getFechaVenc() {
		return this.fechaVenc;
	}

	public void setFechaVenc(Date fechaVenc) {
		this.fechaVenc = fechaVenc;
	}

	@Column(name = "subtotal", nullable = false, precision = 22, scale = 0)
	public double getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(double subtotal) {
		this.subtotal = subtotal;
	}

	@Column(name = "iva", nullable = false, precision = 22, scale = 0)
	public double getIva() {
		return this.iva;
	}

	public void setIva(double iva) {
		this.iva = iva;
	}

	@Column(name = "total", nullable = false, precision = 22, scale = 0)
	public double getTotal() {
		return this.total;
	}

	public void setTotal(double total) {
		this.total = total;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "factura")
	public Set<ItemFactura> getItemFacturas() {
		return this.itemFacturas;
	}

	public void setItemFacturas(Set<ItemFactura> itemFacturas) {
		this.itemFacturas = itemFacturas;
	}

}
